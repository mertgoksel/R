---
title: "Untitled"
format: pdf
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = "D:/Stat")
```

```{r, message=FALSE, warning=FALSE}
library(openxlsx)
library(tidyverse)
library(corrplot)
library(caret)
library(olsrr)
library(leaps)
library(GGally)
library(Metrics)
library(lmtest)
library(glmulti)
```

Variables:

-   Founders_top_company_experience

-   Founders_top_company_experience

-   Founders_previous_company_employee_count

-   Founders_startup_experience

-   Founders_big_5\_experience

-   Founders_experience

-   Founders_global_exposure

-   Founders_Industry_exposure

-   Founder_education

-   Founder_university_quality

-   Founders_Popularity

-   Founders_fortune1000_company_score,

-   Founders_profile_similarity

-   Founders_publications

-   Founders_skills_score

-   Founders_Entrepreneurship_skills_score

-   Founders_Operations_skills_score

-   Founders_Engineering_skills_score

-   Founders_Marketing_skills_score

-   Founders_Leadership_skills_score

-   Founders_Data_Science_skills_score

-   Founders_Business_Strategy_skills_score

-   Founders_Product_Management_skills_score

-   Founders_Sales_skills_score

-   Founders_Domain_skills_score

-   Founder_highest_degree_type

-   y

```{r}
names <- c("tce","pcec","se","b5e","e","ge","Ie","edu","uq","p"
           ,"f1000s","ps","pub","ss","Entss","Oss","Engss","Mss",
           "Lss","DSss","BSss","PMss","Sss","Dss","degreet","y")

df <- read.csv("./R/Stat364/final/startup.csv")

founders <- df[,c(14:38, 49)]

dependent <- df[,2]

founders <- cbind(founders, dependent)
founders[,5] <- NULL

names(founders) <- names
data.frame(names(founders))
```

```{r}
founders <- founders %>% 
  mutate_if(~(n_distinct(.) < 10 | is.character(.)), as.factor)
str(founders)
```

```{r}
train.index <- sample(1:nrow(founders), floor(nrow(founders)*7/10))
founders.train <- founders[train.index,]
founders.test <- founders[-train.index,]
```

```{r, fig.height=8, fig.width=8}
founders_num <- founders.train %>% 
  select_if(\(col) n_distinct(col) > 10)
founders_num%>% 
  cor() %>% corrplot(method = 'color', addCoef.col = 'black',
                     col= colorRampPalette(c("red","white", "blue"))(100))
```

Seems like there are no variables which are highly correlated. Multicolinearity is very unlikely.

```{r, fig.height=8, fig.width=8}
ggpairs(founders_num, 
        aes(color=factor(founders$y), alpha=.7), 
        upper=list(continuous=wrap('density', alpha = 0.4)))
```

## Model building

```{r}
summary(glm(y~., data=founders.train, family = binomial(link = 'logit')))
```

Lets see if this model is significant.

```{r}

model.reduced <- glm(y~1, data=founders.train, 
                     family = binomial(link = 'logit'))
model.full <- glm(y~., data=founders.train, 
                     family = binomial(link = 'logit'))
lrtest(model.full, model.reduced)
```

Model is significant so there is at least one variable which is not 0.

Now lets see which model is best by AIC criteria

```{r}
model.search <- glmulti(y~., 
                        fitfunction = "glm",
                        level=1, method="g", 
                        crit = "aic", 
                        family = binomial(link ="logit"), 
                        data=founders.train,
                        plotty = F, report = F, )
models <- weightable(model.search)
head(models)
```

```{r}
best.model <- formula(y ~ 1 + ge + Ie + edu + p + pub + ss + Entss + DSss)
```

```{r}
model.best <- glm(best.model, data=founders.train, family = binomial(link = 'logit'))
summary(model.best)
```

```{r}
plot(sort(model.best$fitted.values))
```
